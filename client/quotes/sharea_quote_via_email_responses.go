// Code generated by go-swagger; DO NOT EDIT.

package quotes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/mgazza/go-octopus-energy/models"
)

// ShareaQuoteViaEmailReader is a Reader for the ShareaQuoteViaEmail structure.
type ShareaQuoteViaEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ShareaQuoteViaEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewShareAQuoteViaEmailNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewShareAQuoteViaEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewShareAQuoteViaEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /v1/quotes/{code}/products/{product_id}/] Share a quote via email", response, response.Code())
	}
}

// NewShareAQuoteViaEmailNoContent creates a ShareAQuoteViaEmailNoContent with default headers values
func NewShareAQuoteViaEmailNoContent() *ShareAQuoteViaEmailNoContent {
	return &ShareAQuoteViaEmailNoContent{}
}

/*
ShareAQuoteViaEmailNoContent describes a response with status code 204, with default header values.

No validation error and quote or quoted product found
*/
type ShareAQuoteViaEmailNoContent struct {
}

// IsSuccess returns true when this share a quote via email no content response has a 2xx status code
func (o *ShareAQuoteViaEmailNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this share a quote via email no content response has a 3xx status code
func (o *ShareAQuoteViaEmailNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share a quote via email no content response has a 4xx status code
func (o *ShareAQuoteViaEmailNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this share a quote via email no content response has a 5xx status code
func (o *ShareAQuoteViaEmailNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this share a quote via email no content response a status code equal to that given
func (o *ShareAQuoteViaEmailNoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the share a quote via email no content response
func (o *ShareAQuoteViaEmailNoContent) Code() int {
	return 204
}

func (o *ShareAQuoteViaEmailNoContent) Error() string {
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailNoContent", 204)
}

func (o *ShareAQuoteViaEmailNoContent) String() string {
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailNoContent", 204)
}

func (o *ShareAQuoteViaEmailNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewShareAQuoteViaEmailBadRequest creates a ShareAQuoteViaEmailBadRequest with default headers values
func NewShareAQuoteViaEmailBadRequest() *ShareAQuoteViaEmailBadRequest {
	return &ShareAQuoteViaEmailBadRequest{}
}

/*
ShareAQuoteViaEmailBadRequest describes a response with status code 400, with default header values.

Validation errors per index of the email
*/
type ShareAQuoteViaEmailBadRequest struct {
	Payload *models.ValidationErrors
}

// IsSuccess returns true when this share a quote via email bad request response has a 2xx status code
func (o *ShareAQuoteViaEmailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share a quote via email bad request response has a 3xx status code
func (o *ShareAQuoteViaEmailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share a quote via email bad request response has a 4xx status code
func (o *ShareAQuoteViaEmailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this share a quote via email bad request response has a 5xx status code
func (o *ShareAQuoteViaEmailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this share a quote via email bad request response a status code equal to that given
func (o *ShareAQuoteViaEmailBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the share a quote via email bad request response
func (o *ShareAQuoteViaEmailBadRequest) Code() int {
	return 400
}

func (o *ShareAQuoteViaEmailBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailBadRequest %s", 400, payload)
}

func (o *ShareAQuoteViaEmailBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailBadRequest %s", 400, payload)
}

func (o *ShareAQuoteViaEmailBadRequest) GetPayload() *models.ValidationErrors {
	return o.Payload
}

func (o *ShareAQuoteViaEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationErrors)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewShareAQuoteViaEmailNotFound creates a ShareAQuoteViaEmailNotFound with default headers values
func NewShareAQuoteViaEmailNotFound() *ShareAQuoteViaEmailNotFound {
	return &ShareAQuoteViaEmailNotFound{}
}

/*
ShareAQuoteViaEmailNotFound describes a response with status code 404, with default header values.

No quote / quoted product found for given quote_code / product_id
*/
type ShareAQuoteViaEmailNotFound struct {
}

// IsSuccess returns true when this share a quote via email not found response has a 2xx status code
func (o *ShareAQuoteViaEmailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this share a quote via email not found response has a 3xx status code
func (o *ShareAQuoteViaEmailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this share a quote via email not found response has a 4xx status code
func (o *ShareAQuoteViaEmailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this share a quote via email not found response has a 5xx status code
func (o *ShareAQuoteViaEmailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this share a quote via email not found response a status code equal to that given
func (o *ShareAQuoteViaEmailNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the share a quote via email not found response
func (o *ShareAQuoteViaEmailNotFound) Code() int {
	return 404
}

func (o *ShareAQuoteViaEmailNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailNotFound", 404)
}

func (o *ShareAQuoteViaEmailNotFound) String() string {
	return fmt.Sprintf("[POST /v1/quotes/{code}/products/{product_id}/][%d] shareAQuoteViaEmailNotFound", 404)
}

func (o *ShareAQuoteViaEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
