// Code generated by go-swagger; DO NOT EDIT.

package quotes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/mgazza/go-octopus-energy/models"
)

// NewShareaQuoteViaEmailParams creates a new ShareaQuoteViaEmailParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewShareaQuoteViaEmailParams() *ShareaQuoteViaEmailParams {
	return &ShareaQuoteViaEmailParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewShareaQuoteViaEmailParamsWithTimeout creates a new ShareaQuoteViaEmailParams object
// with the ability to set a timeout on a request.
func NewShareaQuoteViaEmailParamsWithTimeout(timeout time.Duration) *ShareaQuoteViaEmailParams {
	return &ShareaQuoteViaEmailParams{
		timeout: timeout,
	}
}

// NewShareaQuoteViaEmailParamsWithContext creates a new ShareaQuoteViaEmailParams object
// with the ability to set a context for a request.
func NewShareaQuoteViaEmailParamsWithContext(ctx context.Context) *ShareaQuoteViaEmailParams {
	return &ShareaQuoteViaEmailParams{
		Context: ctx,
	}
}

// NewShareaQuoteViaEmailParamsWithHTTPClient creates a new ShareaQuoteViaEmailParams object
// with the ability to set a custom HTTPClient for a request.
func NewShareaQuoteViaEmailParamsWithHTTPClient(client *http.Client) *ShareaQuoteViaEmailParams {
	return &ShareaQuoteViaEmailParams{
		HTTPClient: client,
	}
}

/*
ShareaQuoteViaEmailParams contains all the parameters to send to the API endpoint

	for the share a quote via email operation.

	Typically these are written to a http.Request.
*/
type ShareaQuoteViaEmailParams struct {

	// Body.
	Body *models.Emails

	// Code.
	Code string

	// ProductID.
	ProductID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the share a quote via email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShareaQuoteViaEmailParams) WithDefaults() *ShareaQuoteViaEmailParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the share a quote via email params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ShareaQuoteViaEmailParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithTimeout(timeout time.Duration) *ShareaQuoteViaEmailParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithContext(ctx context.Context) *ShareaQuoteViaEmailParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithHTTPClient(client *http.Client) *ShareaQuoteViaEmailParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithBody(body *models.Emails) *ShareaQuoteViaEmailParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetBody(body *models.Emails) {
	o.Body = body
}

// WithCode adds the code to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithCode(code string) *ShareaQuoteViaEmailParams {
	o.SetCode(code)
	return o
}

// SetCode adds the code to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetCode(code string) {
	o.Code = code
}

// WithProductID adds the productID to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) WithProductID(productID string) *ShareaQuoteViaEmailParams {
	o.SetProductID(productID)
	return o
}

// SetProductID adds the productId to the share a quote via email params
func (o *ShareaQuoteViaEmailParams) SetProductID(productID string) {
	o.ProductID = productID
}

// WriteToRequest writes these params to a swagger request
func (o *ShareaQuoteViaEmailParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param code
	if err := r.SetPathParam("code", o.Code); err != nil {
		return err
	}

	// path param product_id
	if err := r.SetPathParam("product_id", o.ProductID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
