// Code generated by go-swagger; DO NOT EDIT.

package products

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewListElectricityTariffStandingChargesParams creates a new ListElectricityTariffStandingChargesParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewListElectricityTariffStandingChargesParams() *ListElectricityTariffStandingChargesParams {
	return &ListElectricityTariffStandingChargesParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewListElectricityTariffStandingChargesParamsWithTimeout creates a new ListElectricityTariffStandingChargesParams object
// with the ability to set a timeout on a request.
func NewListElectricityTariffStandingChargesParamsWithTimeout(timeout time.Duration) *ListElectricityTariffStandingChargesParams {
	return &ListElectricityTariffStandingChargesParams{
		timeout: timeout,
	}
}

// NewListElectricityTariffStandingChargesParamsWithContext creates a new ListElectricityTariffStandingChargesParams object
// with the ability to set a context for a request.
func NewListElectricityTariffStandingChargesParamsWithContext(ctx context.Context) *ListElectricityTariffStandingChargesParams {
	return &ListElectricityTariffStandingChargesParams{
		Context: ctx,
	}
}

// NewListElectricityTariffStandingChargesParamsWithHTTPClient creates a new ListElectricityTariffStandingChargesParams object
// with the ability to set a custom HTTPClient for a request.
func NewListElectricityTariffStandingChargesParamsWithHTTPClient(client *http.Client) *ListElectricityTariffStandingChargesParams {
	return &ListElectricityTariffStandingChargesParams{
		HTTPClient: client,
	}
}

/*
ListElectricityTariffStandingChargesParams contains all the parameters to send to the API endpoint

	for the list electricity tariff standing charges operation.

	Typically these are written to a http.Request.
*/
type ListElectricityTariffStandingChargesParams struct {

	/* Page.

	   A page number within the paginated result set.
	*/
	Page *int64

	/* PageSize.

	   Page size of returned results. Default is 100, maximum is 1500 to give up to a month of half-hourly prices.
	*/
	PageSize *int64

	/* PeriodFrom.

	   Show results from the given datetime (inclusive). This parameter can be provided on its own.

	   Format: datetime
	*/
	PeriodFrom *strfmt.DateTime

	/* PeriodTo.

	   Show results up to the given datetime (exclusive). You must also provide the period_from parameter in order to create a range.

	   Format: datetime
	*/
	PeriodTo *strfmt.DateTime

	/* ProductCode.

	   The code of the product to be retrieved, for example VAR-17-01-11.
	*/
	ProductCode string

	/* TariffCode.

	   The code of the tariff to be retrieved, for example E-1R-VAR-17-01-11-A.
	*/
	TariffCode string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the list electricity tariff standing charges params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListElectricityTariffStandingChargesParams) WithDefaults() *ListElectricityTariffStandingChargesParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the list electricity tariff standing charges params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ListElectricityTariffStandingChargesParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithTimeout(timeout time.Duration) *ListElectricityTariffStandingChargesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithContext(ctx context.Context) *ListElectricityTariffStandingChargesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithHTTPClient(client *http.Client) *ListElectricityTariffStandingChargesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPage adds the page to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithPage(page *int64) *ListElectricityTariffStandingChargesParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetPage(page *int64) {
	o.Page = page
}

// WithPageSize adds the pageSize to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithPageSize(pageSize *int64) *ListElectricityTariffStandingChargesParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetPageSize(pageSize *int64) {
	o.PageSize = pageSize
}

// WithPeriodFrom adds the periodFrom to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithPeriodFrom(periodFrom *strfmt.DateTime) *ListElectricityTariffStandingChargesParams {
	o.SetPeriodFrom(periodFrom)
	return o
}

// SetPeriodFrom adds the periodFrom to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetPeriodFrom(periodFrom *strfmt.DateTime) {
	o.PeriodFrom = periodFrom
}

// WithPeriodTo adds the periodTo to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithPeriodTo(periodTo *strfmt.DateTime) *ListElectricityTariffStandingChargesParams {
	o.SetPeriodTo(periodTo)
	return o
}

// SetPeriodTo adds the periodTo to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetPeriodTo(periodTo *strfmt.DateTime) {
	o.PeriodTo = periodTo
}

// WithProductCode adds the productCode to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithProductCode(productCode string) *ListElectricityTariffStandingChargesParams {
	o.SetProductCode(productCode)
	return o
}

// SetProductCode adds the productCode to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetProductCode(productCode string) {
	o.ProductCode = productCode
}

// WithTariffCode adds the tariffCode to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) WithTariffCode(tariffCode string) *ListElectricityTariffStandingChargesParams {
	o.SetTariffCode(tariffCode)
	return o
}

// SetTariffCode adds the tariffCode to the list electricity tariff standing charges params
func (o *ListElectricityTariffStandingChargesParams) SetTariffCode(tariffCode string) {
	o.TariffCode = tariffCode
}

// WriteToRequest writes these params to a swagger request
func (o *ListElectricityTariffStandingChargesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Page != nil {

		// query param page
		var qrPage int64

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := swag.FormatInt64(qrPage)
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param page_size
		var qrPageSize int64

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := swag.FormatInt64(qrPageSize)
		if qPageSize != "" {

			if err := r.SetQueryParam("page_size", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.PeriodFrom != nil {

		// query param period_from
		var qrPeriodFrom strfmt.DateTime

		if o.PeriodFrom != nil {
			qrPeriodFrom = *o.PeriodFrom
		}
		qPeriodFrom := qrPeriodFrom.String()
		if qPeriodFrom != "" {

			if err := r.SetQueryParam("period_from", qPeriodFrom); err != nil {
				return err
			}
		}
	}

	if o.PeriodTo != nil {

		// query param period_to
		var qrPeriodTo strfmt.DateTime

		if o.PeriodTo != nil {
			qrPeriodTo = *o.PeriodTo
		}
		qPeriodTo := qrPeriodTo.String()
		if qPeriodTo != "" {

			if err := r.SetQueryParam("period_to", qPeriodTo); err != nil {
				return err
			}
		}
	}

	// path param product_code
	if err := r.SetPathParam("product_code", o.ProductCode); err != nil {
		return err
	}

	// path param tariff_code
	if err := r.SetPathParam("tariff_code", o.TariffCode); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
