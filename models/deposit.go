// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Deposit deposit
//
// swagger:model Deposit
type Deposit struct {

	// amount
	// Minimum: 1
	Amount int64 `json:"amount,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// reason
	Reason string `json:"reason,omitempty"`
}

// Validate validates this deposit
func (m *Deposit) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Deposit) validateAmount(formats strfmt.Registry) error {
	if swag.IsZero(m.Amount) { // not required
		return nil
	}

	if err := validate.MinimumInt("amount", "body", m.Amount, 1, false); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this deposit based on context it is used
func (m *Deposit) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Deposit) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Deposit) UnmarshalBinary(b []byte) error {
	var res Deposit
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
